swagger: '2.0'
################################################################################
#                              API Information                                 #
################################################################################
info:
  title: CEDAR Resource Server API
  description: Better Metadata - Better Science
  version: "1.0.0"
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
################################################################################
#                              Security                                        #
################################################################################
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    description: Your CEDAR API key, using the format 'apiKey &lt;yourApiKey&gt;'
    in: header
################################################################################
#                              Responses                                       #
################################################################################
responses:
  ok: #200
    description: Successful operation
  ok_folder: #200
    description: A folder
    schema:
      type: object
      items:
        $ref: '#/definitions/Folder'
  ok_template_element: #200
    description: A template element
    schema:
      type: object
      items:
        $ref: '#/definitions/TemplateElement'
  created_folder: #201
    description: A folder
    schema:
      type: object
      items:
        $ref: '#/definitions/Folder'
  created_template_element: #201
    description: A template element
    schema:
      type: object
      items:
        $ref: '#/definitions/TemplateElement'
  no_content: #204
    description: Successful operation (no content)
  bad_request: #400
    description: Bad request
  unauthorized: #401
    description: Unauthorized
  forbidden: #403
    description: Forbidden
  not_found: #404
    description: Not found
  internal_error: #500
    description: Internal server error
################################################################################
#                              Parameters                                      #
################################################################################
parameters:
  folder_id:
    name: folder_id
    in: path
    description: Folder identifier. Example&#58; https://repo.metadatacenter.net/folders/8bc64ab5-df6b-48c8-8c61-6c016245918e
    type: string
    required: true
  qs_folder_id:
    name: folder_id
    in: query
    description: Folder identifier. Example&#58; https://repo.metadatacenter.net/folders/8bc64ab5-df6b-48c8-8c61-6c016245918e
    type: string
    required: true
  resource_types:
    name: resource_types
    in: query
    description: |
      Resource types as comma separated values.
      The allowed values are: 'folder', 'field', 'element', 'template', 'instance'
    type: string
    required: false
  sort:
    name: sort
    in: query
    description: |
      Sort field names as comma separated values.
      Prepending a field with '-' means descending order on that field.
      The allowed values are: 'name', 'lastUpdatedOnTS', 'createdOnTS'
    type: string
    required: false
    default: name
  limit:
    name: limit
    in: query
    description: Paging limit
    type: integer
    required: false
    default: 100
    minimum: 0
    maximum: 500
  offset:
    name: offset
    in: query
    description: Paging offset
    type: number
    required: false
    default: 0
    minimum: 0
  template_element_id:
    name: template_element_id
    in: path
    description: Template Element identifier. Example&#58; https://repo.metadatacenter.net/templatesd/8bc64ab5-df6b-48c8-8c61-6c016245918e
    type: string
    required: true
################################################################################
#                              Paths                                           #
################################################################################
paths:
  /users:
    get:
      summary: Users
      description: |
        The Users endpoint returns information about the users of the system.
      tags:
        - Users
      security:
        - api_key: []
      responses:
        200:
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        500:
          $ref: '#/responses/internal_error'
  /folders/{folder_id}:
    get:
      summary: Get a folder
      description: |
        Get a folder.
      tags:
        - Folders
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        200:
          $ref: '#/responses/ok_folder'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    put:
      summary: Update a folder
      description: |
        Update a folder.
      tags:
        - Folders
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        200:
          $ref: '#/responses/ok_folder'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    delete:
      summary: Delete a folder
      description: |
        Delete a folder.
      tags:
        - Folders
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        204:
          $ref: '#/responses/no_content'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /folders:
    post:
      summary: Create a folder
      description: |
        Create a folder.
      tags:
        - Folders
      security:
        - api_key: []
      responses:
        201:
          $ref: '#/responses/created_folder'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /folders/{folder_id}/permissions:
    get:
      summary: Get permissions of a folder
      description: |
        Get permissions of a folder.
      tags:
        - Folders
        - Permissions
        - Folder Permissions
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    put:
      summary: Update permissions of a folder
      description: |
        Update permissions of a folder.
      tags:
        - Folders
        - Permissions
        - Folder Permissions
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /folders/{folder_id}/details:
    get:
      summary: Get the details of a folder
      description: |
        Get the details of a folder.
      tags:
        - Folders
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /folders/{folder_id}/contents:
    get:
      summary: Get the contents of a folder
      description: |
        Get the contents of a folder.
      tags:
        - Folders
        - Folder contents
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/folder_id'
        - $ref: '#/parameters/resource_types'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /template-elements/{template_element_id}:
    get:
      summary: Get a template element
      description: |
        Get a template element.
      tags:
        - Template elements
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/template_element_id'
      responses:
        200:
          $ref: '#/responses/ok_template_element'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    put:
      summary: Update a template element
      description: |
        Update a template element.
      tags:
        - Template elements
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/template_element_id'
      responses:
        200:
          $ref: '#/responses/ok_template_element'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    delete:
      summary: Delete a template element
      description: |
        Delete a template element.
      tags:
        - Template elements
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/template_element_id'
      responses:
        204:
          $ref: '#/responses/no_content'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /template_elements:
    post:
      summary: Create a template element
      description: |
        Create a template element.
      tags:
        - Template elements
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/qs_folder_id'
      responses:
        201:
          $ref: '#/responses/created_template_element'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
  /template_elements/{template_element_id}/permissions:
    get:
      summary: Get permissions of a template element
      description: |
        Get permissions of a template element.
      tags:
        - Template elements
        - Permissions
        - Template element Permissions
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/template_element_id'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'
    put:
      summary: Update permissions of a template element
      description: |
        Update permissions of a template element.
      tags:
        - Template elements
        - Permissions
        - Template element Permissions
      security:
        - api_key: []
      parameters:
        - $ref: '#/parameters/template_element_id'
      responses:
        200:
          $ref: '#/responses/ok'
        400:
          $ref: '#/responses/bad_request'
        401:
          $ref: '#/responses/unauthorized'
        403:
          $ref: '#/responses/forbidden'
        404:
          $ref: '#/responses/not_found'
        500:
          $ref: '#/responses/internal_error'          
definitions:
  User:
    type: object
    properties:
      id:
        type: string
        description: Unique URL identifier representing a specific user.
      createdOn:
        type: string
        description: Creation time in xsd:dateTime format.
      createdOnTS:
        type: number
        description: Creation time as Unix timestamp.
      lastUpdatedOn:
        type: string
        description: Last update time in xsd:dateTime format.
      lastUpdatedOnTS:
        type: string
        description: Last update time as Unix timestamp.
      firstName:
        type: string
        description: First name.
      lastName:
        type: string
        description: Last name.
      displayName:
        type: string
        description: Display name.
      email:
        type: string
        description: Email.
      nodeType:
        type: string
        description: The value "user"
  Folder:
    type: object
    properties:
      id:
        type: string
        description: Unique URL identifier representing a specific folder.
  TemplateElement:
    type: object
    properties:
      '@id':
        type: string
        description: Unique URL identifier representing a specific template element.
