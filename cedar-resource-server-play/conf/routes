# Folder contents
GET            /folders/contents                       controllers.FolderContentsController.findFolderContentsByPath(path: play.libs.F.Option[String], resource_types: play.libs.F.Option[String], sort: play.libs.F.Option[String], limit: play.libs.F.Option[Integer], offset: play.libs.F.Option[Integer])
GET            /folders/:id/contents                   controllers.FolderContentsController.findFolderContentsById(id: String, resource_types: play.libs.F.Option[String], sort: play.libs.F.Option[String], limit: play.libs.F.Option[Integer], offset: play.libs.F.Option[Integer])

# Folders
POST           /folders                                controllers.FolderController.createFolder()
GET            /folders/:id                            controllers.FolderController.findFolder(id: String)
GET            /folders/:id/details                    controllers.FolderController.findFolderDetails(id: String)
PUT            /folders/:id                            controllers.FolderController.updateFolder(id: String)
DELETE         /folders/:id                            controllers.FolderController.deleteFolder(id: String)
GET            /folders/:id/permissions                controllers.FolderController.getFolderPermissions(id: String)
PUT            /folders/:id/permissions                controllers.FolderController.updateFolderPermissions(id: String)

# Templates
##POST           /templates                              controllers.TemplateController.createTemplate(importMode: play.libs.F.Option[java.lang.Boolean])
##GET            /templates/:id                          controllers.TemplateController.findTemplate(id: String)
##GET            /templates/:id/details                  controllers.TemplateController.findTemplateDetails(id: String)
#PUT            /templates/:id                          controllers.TemplateController.updateTemplate(id: String)
#DELETE         /templates/:id                          controllers.TemplateController.deleteTemplate(id: String)
#GET            /templates/:id/permissions              controllers.TemplateController.getTemplatePermissions(id: String)
#PUT            /templates/:id/permissions              controllers.TemplateController.updateTemplatePermissions(id: String)

# Template Elements
POST           /template-elements                      controllers.TemplateElementController.createTemplateElement(importMode: play.libs.F.Option[java.lang.Boolean])
GET            /template-elements/:id                  controllers.TemplateElementController.findTemplateElement(id: String)
GET            /template-elements/:id/details          controllers.TemplateElementController.findTemplateElementDetails(id: String)
PUT            /template-elements/:id                  controllers.TemplateElementController.updateTemplateElement(id: String)
DELETE         /template-elements/:id                  controllers.TemplateElementController.deleteTemplateElement(id: String)
GET            /template-elements/:id/permissions      controllers.TemplateElementController.getTemplateElementPermissions(id: String)
PUT            /template-elements/:id/permissions      controllers.TemplateElementController.updateTemplateElementPermissions(id: String)

# Template Fields
POST           /template-fields                        controllers.TemplateFieldController.createTemplateField(importMode: play.libs.F.Option[java.lang.Boolean])
GET            /template-fields/:id                    controllers.TemplateFieldController.findTemplateField(id: String)
GET            /template-fields/:id/details            controllers.TemplateFieldController.findTemplateFieldDetails(id: String)
PUT            /template-fields/:id                    controllers.TemplateFieldController.updateTemplateField(id: String)
DELETE         /template-fields/:id                    controllers.TemplateFieldController.deleteTemplateField(id: String)
GET            /template-fields/:id/permissions        controllers.TemplateFieldController.getTemplateFieldPermissions(id: String)
PUT            /template-fields/:id/permissions        controllers.TemplateFieldController.updateTemplateFieldPermissions(id: String)

# Template Instances
POST           /template-instances                     controllers.TemplateInstanceController.createTemplateInstance(importMode: play.libs.F.Option[java.lang.Boolean])
GET            /template-instances/:id                 controllers.TemplateInstanceController.findTemplateInstance(id: String)
GET            /template-instances/:id/details         controllers.TemplateInstanceController.findTemplateInstanceDetails(id: String)
PUT            /template-instances/:id                 controllers.TemplateInstanceController.updateTemplateInstance(id: String)
DELETE         /template-instances/:id                 controllers.TemplateInstanceController.deleteTemplateInstance(id: String)
GET            /template-instances/:id/permissions     controllers.TemplateInstanceController.getTemplateInstancePermissions(id: String)
PUT            /template-instances/:id/permissions     controllers.TemplateInstanceController.updateTemplateInstancePermissions(id: String)

# Users
GET            /users                                  controllers.UserController.findUsers()

# Search
GET            /search                                 controllers.SearchController.search(q: play.libs.F.Option[String], resource_types: play.libs.F.Option[String], template_id:play.libs.F.Option[String], sort: play.libs.F.Option[String], limit: play.libs.F.Option[Integer], offset: play.libs.F.Option[Integer])
GET            /search-deep                            controllers.SearchController.searchDeep(q: play.libs.F.Option[String], resource_types: play.libs.F.Option[String], template_id:play.libs.F.Option[String], sort: play.libs.F.Option[String], limit: play.libs.F.Option[Integer])
#POST           /search                          controllers.SearchController.searchByPost()

# Commands
POST           /command/regenerate-search-index        controllers.SearchController.regenerateSearchIndex()
POST           /command/copy-resource-to-folder        controllers.CommandController.copyResourceToFolder()
POST           /command/move-node-to-folder            controllers.CommandController.moveNodeToFolder()
POST           /command/auth-user-callback             controllers.CommandController.authUserCallback()
POST           /command/auth-admin-callback            controllers.CommandController.authAdminCallback()